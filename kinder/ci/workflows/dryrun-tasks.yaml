# AUTOGENERATED by https://git.k8s.io/kubeadm/kinder/ci/tools/update-workflows
# IMPORTANT! this workflow is imported by dryrun-* workflows.
version: 1
summary: |
  This workflow implements a sequence of tasks used test the dryrun functioning
  of kubeadm version X with Kubernetes version X.
vars:
  # vars defines default values for variable used by tasks in this workflow;
  # those values might be overridden when importing this files.
  kubernetesVersion: "{{ resolve `ci/latest` }}"
  upgradeVersion: "{{ resolve `ci/latest` }}"
  controlPlaneNodes: 1
  workerNodes: 1
  baseImage: kindest/base:v20220324-837a3da8
  image: kindest/node:test
  clusterName: kinder-dryrun
  kubeadmIgnorePreflightErrors: Swap,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables
  kubeadmVerbosity: 6
tasks:
- name: pull-base-image
  description: |
    pulls kindest/base image with docker in docker and all the prerequisites necessary for running kind(er)
  cmd: docker
  args:
    - pull
    - "{{ .vars.baseImage }}"
- name: add-kubernetes-versions
  description: |
    creates a node-image-variant by adding a Kubernetes version
  cmd: kinder
  args:
    - build
    - node-image-variant
    - --base-image={{ .vars.baseImage }}
    - --image={{ .vars.image }}
    - --with-init-artifacts={{ .vars.kubernetesVersion }}
    - --loglevel=debug
  timeout: 15m
- name: create-cluster
  description: |
    create a set of nodes ready for hosting the Kubernetes cluster
  cmd: kinder
  args:
    - create
    - cluster
    - --name={{ .vars.clusterName }}
    - --image={{ .vars.image }}
    - --control-plane-nodes={{ .vars.controlPlaneNodes }}
    - --worker-nodes={{ .vars.workerNodes }}
    - --loglevel=debug
  timeout: 5m
- name: init-dryrun
  description: |
    Initializes the Kubernetes cluster in dryrun mode
  cmd: /bin/bash
  args:
    - -c
    - |
      docker exec {{ .vars.clusterName }}-control-plane-1 kubeadm init --ignore-preflight-errors={{ .vars.kubeadmIgnorePreflightErrors }} --kubernetes-version={{ .vars.kubernetesVersion }} --dry-run=true --v={{ .vars.kubeadmVerbosity }} || exit 1
      docker exec {{ .vars.clusterName }}-control-plane-1 kubeadm init --ignore-preflight-errors={{ .vars.kubeadmIgnorePreflightErrors }} --kubernetes-version={{ .vars.kubernetesVersion }} --upload-certs=true --dry-run=true --v={{ .vars.kubeadmVerbosity }} || exit 1
  timeout: 5m
- name: init
  description: |
    Initializes the Kubernetes cluster with version "initVersion"
    by starting the boostrap control-plane nodes
  cmd: kinder
  args:
    - do
    - kubeadm-init
    - --name={{ .vars.clusterName }}
    - --loglevel=debug
    - --kubeadm-verbosity={{ .vars.kubeadmVerbosity }}
  timeout: 5m
- name: join-dryrun
  description: |
    Join the other nodes to the Kubernetes cluster in dryrun mode
  cmd: /bin/bash
  args:
    - -c
    - |
      docker exec {{ .vars.clusterName }}-worker-1 $(docker exec {{ .vars.clusterName }}-control-plane-1 kubeadm token create --print-join-command) --ignore-preflight-errors={{ .vars.kubeadmIgnorePreflightErrors }} --dry-run=true --v={{ .vars.kubeadmVerbosity }} || exit 1
  timeout: 10m
- name: join
  description: |
    Join the other nodes to the Kubernetes cluster
  cmd: kinder
  args:
    - do
    - kubeadm-join
    - --name={{ .vars.clusterName }}
    - --loglevel=debug
    - --kubeadm-verbosity={{ .vars.kubeadmVerbosity }}
  timeout: 10m
- name: upgrade-dryrun
  description: |
    upgrades the cluster to Kubernetes "upgradeVersion" in dryrun mode
  cmd: /bin/bash
  args:
    - -c
    - |
      docker exec {{ .vars.clusterName }}-control-plane-1 kubeadm upgrade apply {{ .vars.upgradeVersion }} --ignore-preflight-errors={{ .vars.kubeadmIgnorePreflightErrors }} --allow-release-candidate-upgrades=true --allow-experimental-upgrades=true --dry-run=true --v={{ .vars.kubeadmVerbosity }} || exit 1
      docker exec {{ .vars.clusterName }}-worker-1 kubeadm upgrade node --ignore-preflight-errors={{ .vars.kubeadmIgnorePreflightErrors }} --dry-run=true --v={{ .vars.kubeadmVerbosity }} || exit 1
- name: reset-dryrun
  description: |
    Exec kubeadm reset in dryrun mode
  cmd: /bin/bash
  args:
    - -c
    - |
      docker exec {{ .vars.clusterName }}-control-plane-1 kubeadm reset --force=true --ignore-preflight-errors={{ .vars.kubeadmIgnorePreflightErrors }} --dry-run=true --v={{ .vars.kubeadmVerbosity }} || exit 1
      docker exec {{ .vars.clusterName }}-worker-1 kubeadm reset --force=true --ignore-preflight-errors={{ .vars.kubeadmIgnorePreflightErrors }} --dry-run=true --v={{ .vars.kubeadmVerbosity }} || exit 1
  force: true
- name: reset
  description: |
    Exec kubeadm reset
  cmd: kinder
  args:
    - do
    - kubeadm-reset
    - --name={{ .vars.clusterName }}
    - --loglevel=debug
    - --kubeadm-verbosity={{ .vars.kubeadmVerbosity }}
  force: true
- name: delete
  description: |
    Deletes the cluster
  cmd: kinder
  args:
    - delete
    - cluster
    - --name={{ .vars.clusterName }}
    - --loglevel=debug
  force: true
